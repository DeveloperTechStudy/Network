05(1) 응용계층
### 발표 자료: HTTP 메소드의 이해

---

### 1. HTTP란?

- **HTTP (HyperText Transfer Protocol)**: 웹에서 클라이언트와 서버 간에 데이터를 주고받기 위한 프로토콜.
- **특징**:
    - 요청-응답 기반 프로토콜
    - Stateless 프로토콜: 각 요청은 독립적이며, 상태를 유지하지 않음.
    - 다양한 HTTP 메소드를 통해 다양한 작업을 수행할 수 있음.

---

### 2. HTTP 메시지 구조

- **HTTP 요청 메시지**:
    - **요청 줄(Function)**: 메소드, URL, HTTP 버전
    - **헤더(Headers)**: 클라이언트와 서버 간에 추가 정보를 전달
    - **바디(Body)**: (선택적) 서버에 보낼 데이터 포함
- **HTTP 응답 메시지**:
    - **상태 줄(Status Line)**: HTTP 버전, 상태 코드, 상태 메시지
    - **헤더(Headers)**: 서버에서 클라이언트로 보내는 추가 정보
    - **바디(Body)**: (선택적) 서버에서 클라이언트로 전달하는 데이터 포함

---

### 3. 주요 HTTP 메소드

1. **GET**
    - **기능**: 서버에서 리소스를 가져올 때 사용.
    - **특징**: 데이터가 URL에 포함되며, 요청에 대한 결과가 캐싱될 수 있음.
    - **예시**: `GET /index.html HTTP/1.1`
2. **POST**
    - **기능**: 서버에 데이터를 제출하고, 새로운 리소스를 생성할 때 사용.
    - **특징**: 데이터는 요청 바디에 포함되며, 데이터 생성이나 업데이트 시 사용됨.
    - **예시**: `POST /form-submit HTTP/1.1`
3. **PUT**
    - **기능**: 서버에 이미 존재하는 리소스를 업데이트할 때 사용.
    - **특징**: 특정 리소스를 지정하고 그 내용을 대체함.
    - **예시**: `PUT /user/123 HTTP/1.1`
4. **DELETE**
    - **기능**: 서버에서 리소스를 삭제할 때 사용.
    - **특징**: 지정된 리소스를 서버에서 제거함.
    - **예시**: `DELETE /user/123 HTTP/1.1`
5. **PATCH**
    - **기능**: 리소스의 일부를 업데이트할 때 사용.
    - **특징**: 전체 리소스가 아닌 부분적인 업데이트가 가능함.
    - **예시**: `PATCH /user/123 HTTP/1.1`
6. **HEAD**
    - **기능**: GET과 유사하지만, 응답 바디 없이 헤더 정보만을 요청.
    - **특징**: 리소스의 메타데이터를 확인할 때 유용.
    - **예시**: `HEAD /index.html HTTP/1.1`

---

### 4. HTTP 메소드의 실제 사용 사례

- **GET**: 웹 페이지나 이미지 등 리소스를 조회할 때.
- **POST**: 회원 가입, 로그인 등 서버에 데이터를 제출할 때.
- **PUT**: 사용자의 프로필 정보를 수정할 때.
- **DELETE**: 사용자가 자신의 계정을 삭제할 때.
- **PATCH**: 사용자의 프로필 중 일부 정보만 수정할 때.
- **HEAD**: 대용량 파일의 다운로드 전에 메타데이터만 확인할 때.

---

### 5. HTTP 메소드 선택 시 고려사항

- **안전성 (Safety)**: GET, HEAD는 안전한 메소드로, 서버의 상태를 변경하지 않음.
- **멱등성 (Idempotency)**: PUT, DELETE는 멱등성을 가짐. 동일한 요청을 여러 번 보내도 결과가 동일함.
- **캐싱 가능성 (Cacheability)**: GET, HEAD 메소드는 캐싱이 가능하여, 응답 데이터를 재사용할 수 있음.

---

### 6. 결론

- **HTTP 메소드**는 웹 개발의 기본이며, 각각의 메소드는 특정 상황에 맞게 사용되어야 함.
- 메소드의 특성과 적절한 사용 사례를 이해함으로써 효율적인 웹 애플리케이션 개발이 가능함.

---

## 추가

### HTTPS
